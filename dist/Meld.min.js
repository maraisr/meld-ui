!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.Meld=e.Meld||{})}(this,function(e){"use strict";var t={};t.classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},t.createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),t.inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)},t.possibleConstructorReturn=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t};var n;!function(e){var n=function i(e,n){t.classCallCheck(this,i),this.name=e,this.value=n,this.hash=Math.random().toString(36).substr(2,7),this.elm=document.createElement("div"),this.elm.className="meld__bind"},r=function(e){function n(){return t.classCallCheck(this,n),t.possibleConstructorReturn(this,Object.getPrototypeOf(n).apply(this,arguments))}return t.inherits(n,e),t.createClass(n,[{key:"deligate",value:function(){var e=document.createElement("input");return this.elm.appendChild(e),this.elm.className+=" meld__bind--text",e.setAttribute("type","text"),e.setAttribute("name",this.hash),e.setAttribute("value",this.value),this.elm}}]),n}(n);e.Text=r}(n||(n={})),e.Meld,function(e){var r=function(){function e(n){t.classCallCheck(this,e),this.fields=new Array,n||console.warn("Meld: No HTMLElement provided."),this.elm=n}return t.createClass(e,[{key:"init",value:function(e){return this.config=e,!0}},{key:"render",value:function(e){var t=this;return Object.keys(e).forEach(function(r){var i=e[r];"string"==typeof i&&t.fields.push(new n.Text(r,i))}),this.fields.forEach(function(e){t.elm.appendChild(e.deligate())}),!0}}]),e}();e.Ui=r}(e.Meld||(e.Meld={}))});